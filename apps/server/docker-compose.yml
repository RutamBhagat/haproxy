name: haproxy

services:
  postgres:
    image: postgres
    container_name: haproxy-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - haproxy_postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 4G
        reservations:
          cpus: "1.0"
          memory: 2G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgb1:
    image: bitnami/pgbouncer:1
    container_name: pgb1
    ports:
      - "6432:6432"
    environment:
      - POSTGRESQL_HOST=haproxy-postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRESQL_DATABASE=postgres
      - PGBOUNCER_AUTH_TYPE=trust
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_DEFAULT_POOL_SIZE=70
      - PGBOUNCER_MAX_CLIENT_CONN=4000
      - PGBOUNCER_STATS_PERIOD=60
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/6432' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgb2:
    image: bitnami/pgbouncer:1
    container_name: pgb2
    ports:
      - "6433:6432"
    environment:
      - POSTGRESQL_HOST=haproxy-postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRESQL_DATABASE=postgres
      - PGBOUNCER_AUTH_TYPE=trust
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_DEFAULT_POOL_SIZE=70
      - PGBOUNCER_MAX_CLIENT_CONN=4000
      - PGBOUNCER_STATS_PERIOD=60
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/6432' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgb3:
    image: bitnami/pgbouncer:1
    container_name: pgb3
    ports:
      - "6434:6432"
    environment:
      - POSTGRESQL_HOST=haproxy-postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRESQL_DATABASE=postgres
      - PGBOUNCER_AUTH_TYPE=trust
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_DEFAULT_POOL_SIZE=70
      - PGBOUNCER_MAX_CLIENT_CONN=4000
      - PGBOUNCER_STATS_PERIOD=60
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/6432' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # HAProxy removed - now handled by Vagrant VMs with keepalived
  # Connect to 192.168.1.100:5432 (Virtual IP) for database access
  # Stats available at http://192.168.1.100:8404/stats

  health-monitor:
    image: alpine:latest
    container_name: health-monitor
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - HAPROXY_STATS_URL=${HAPROXY_STATS_URL}
    volumes:
      - ./docker/monitoring/monitor.sh:/monitor.sh:ro
    command: sh /monitor.sh
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "pgrep -f monitor.sh || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  haproxy_postgres_data: